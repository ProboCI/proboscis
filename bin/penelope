#! /usr/bin/env node
var parse = require('shell-quote').parse;
var es = require('event-stream');
var async = require('async');
var fs = require('fs');
var util = require('util');
var path = require('path');

var yargs = require('yargs');
var Penelope = require('../index');
var loadFileConfig = require('../lib/loadFileConfig');
var runner = new Penelope();

argv = yargs
  .usage('penelope -c "echo foo" -c "echo bar"')
  .default('help', false)
  .describe('help', 'Display this help text.')
  .alias('help', 'h')
  .alias('command', 'c')
  .describe('command', 'A command to run as a child.')
  .argv;

if (argv.help) {
  yargs.showHelp();
  process.exit(0);
}

var commands = argv.command;

if (typeof argv.command === 'string') {
  commands = [ argv.command ];
}

runner.eventStream
  .pipe(es.stringify())
  .pipe(process.stdout);

var i = null;
for (i in commands) {
  var command = commands[i];
  var args = parse(command);
  var binary = args.shift();
  var name = binary;
  runner.runCommand(name, binary, args);
}

/**
 * Properly handle an error.
 */
var handleError = function(error) {
  var message = 'File cannot be loaded, an unexpected error occurred while loading `%s`.';
  switch (error.code) {
    case 'ENOENT':
      message = 'File cannot be loaded, this may be bad permissions or a bad file path `%s`.';
      break;
    case 'PARSE':
      message = 'File `%s` cannot be parsed.';
      break;
  }
  message = util.format(message, error.path);
  console.error(message);
  process.exit(1);
};

// TODO: Move this into it's own include module.
var files = argv._;
loadFileConfig(files, function(error, configs) {
  if (error) handleError(error);
});

